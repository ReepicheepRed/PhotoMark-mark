apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "me.jessyan.mvparms.demo"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
    }
    buildTypes {

        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "boolean", "USE_CANARY", "false"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
        checkReleaseBuilds false

    }

    //  base* additional for databinding
    dataBinding {
        enabled = true
    }

    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                output.outputFile = new File(outputFile.parent, "Template_${defaultConfig.versionCode}_v${defaultConfig.versionName}_${buildType.name}.apk");
            }
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/jni/CMakeLists.txt'
        }
    }
}

buildscript {
    repositories {
        jcenter()
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //support
    compile(rootProject.ext.dependencies["cardview-v7"]) {
        exclude module: 'support-annotations'
    }
    //tools
    provided rootProject.ext.dependencies["javax.annotation"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    compile rootProject.ext.dependencies["progressmanager"]
    //view
    annotationProcessor(rootProject.ext.dependencies["butterknife-compiler"]) {
        exclude module: 'support-annotations'
        exclude module: 'butterknife-annotations'
    }
    compile rootProject.ext.dependencies["paginate"]
    //arms
 //   compile project(':arms')
    compile 'me.jessyan:arms:2.1.0'
    //test
    testCompile rootProject.ext.dependencies["junit"]
    debugCompile rootProject.ext.dependencies["canary-debug"]
    releaseCompile rootProject.ext.dependencies["canary-release"]
    testCompile rootProject.ext.dependencies["canary-release"]

    //  base* additional
//    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
//    kapt "com.android.databinding:compiler:$android_plugin_version"
    compile project(':Lib_A:sharelibrary')
    compile project(':Lib_A:talkingdata')
    //----------------------Special libraries------------------------------
    compile project(':Lib_B:gallerypick')
    compile 'com.isseiaoki:simplecropview:1.1.4'
    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    compile files('libs/imageviewtouch.jar')
    compile 'com.youth.banner:banner:1.4.9'
}
